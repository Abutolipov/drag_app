
import 'dart:convert';


import 'package:drag_app/models/apteka_model/apteka.dart';
import 'package:drag_app/screens/splash.dart';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';

import 'admin_page.dart';
import 'dori_diteal.dart';
List list=[];
int sum=0;
late int a;
class ThirdPage extends StatefulWidget {
  @override
  State<ThirdPage> createState() => _ThirdPageState();
}

class _ThirdPageState extends State<ThirdPage> {
  Future<List<Apteka>?>? getResult;
   late String name;
   late String name2;
  Future<List<Apteka>> getData() async {
    String url = "https://pharmacy-app-management.herokuapp.com/api/drugs";

    var response = await http.get(Uri.parse(url));

    if (response.statusCode == 200) {
      List json = jsonDecode(response.body) as List;
      List<Apteka> dori = json.map((e) => Apteka.fromJson(e)).toList();
      return dori;
    }

    return List.empty();
  }


  @override
  void initState(){
    homaeSh().whenComplete(()async{
     print("$name");
    });
    homae().whenComplete(()async{
      print("$name2");
    });
    super.initState();
    getResult = getData();
  }


  Future homaeSh()async{
    final pref=await SharedPreferences.getInstance();
    name=pref.getString('userName')??" ";
    setState(() {

    });

  }
  Future homae()async{
    final pref=await SharedPreferences.getInstance();
    name2=pref.getString('userEmail')??" ";
    setState(() {

    });
  }
   num? id;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          onPressed: (){
            Navigator.push(context, MaterialPageRoute(builder: (_)=>AdminPage()));
          },
          icon: Icon(Icons.add,color: Colors.black,size: 20,),
        ),
        actions: [
          IconButton(onPressed: ()async{
            final pref=await SharedPreferences.getInstance();
            pref.setBool('showHome', false);
            pref.remove('userName');
            pref.remove('userEmail');
            Navigator.pushReplacement(context, MaterialPageRoute(builder: (_)=>MyCustomWidget()));
          }, icon: Icon(Icons.exit_to_app_outlined,color: Colors.black,size: 20,))
        ],
        title: Text('Hi $name$name2',style: TextStyle(color: Colors.black,fontSize:16),),
        backgroundColor: Colors.white24,
        elevation: 0,
      ),
      body:FutureBuilder<List<Apteka>?>(
        future: getResult,
        builder: (BuildContext context, AsyncSnapshot<List<Apteka>?> snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Container(
              height: MediaQuery.of(context).size.height,
              child: Center(child: CircularProgressIndicator()),
            );
          }
          if (snapshot.hasError) {
            return Center(child: Text(snapshot.error.toString()));
          }
          if (snapshot.hasData) {
            List<Apteka>? users = snapshot.data;

            return All(users!);
          }
          return Container();
        },
      ),
    );
  }


  Widget ConDor(String image, String text1){
    return Container(
      margin: EdgeInsets.all(7),
      decoration: BoxDecoration(
        color: Color(0xffF5F7FA),
        borderRadius: BorderRadius.circular(10),
      ),
      clipBehavior: Clip.hardEdge,
      child: Column(
        children: [
          Image.asset(image),
          SizedBox(height: 5,),
          Text(text1)
        ],
      ),
    );
  }

  Widget All(List<Apteka> articles){
    return Container(
      padding: EdgeInsets.all(15),
      width: double.infinity,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          SizedBox(
            width: double.infinity,
            height: 140,
            child: Image.asset("assets/images/reklama.png",fit: BoxFit.fill,),
          ),
          const SizedBox(height: 10,),
          const Text("Diabetes diet",style: TextStyle(color: Colors.black,fontSize: 16),),
          SizedBox(
              height: 170,
              child: ListView(
                scrollDirection: Axis.horizontal,
                children: [
                  ConDor("assets/images/dori.png","Juice&\nVengar"),
                  ConDor("assets/images/dori2.png","Juice&\nVengar"),
                  ConDor("assets/images/dori3.png","Juice&\nVengar"),
                  ConDor("assets/images/dori.png","Juice&\nVengar"),
                  ConDor("assets/images/dori2.png","Juice&\nVengar"),
                  ConDor("assets/images/dori3.png","Juice&\nVengar"),
                ],
              )
          ),
          const Text("All products",style: TextStyle(color: Colors.black,fontSize: 16),),

          Expanded(
            child: Container(
              child: GridView.builder(
                itemCount:articles.length,
                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                    crossAxisCount: 2,
                    crossAxisSpacing: 4.0,
                    mainAxisSpacing: 4.0
                ),
                itemBuilder: (context, index){
                  return  InkWell(
                    onLongPress: (){
                      a=articles[index].id;
                      showDialog(
                          context: context,
                          builder: (context) {
                            return AlertDialog(
                              content: const Text("Are you sure to delate"),
                              actions: <Widget>[
                                 ElevatedButton(
                                    onPressed: () {
                                      Navigator.of(context).pop();
                                    },
                                    child: const Text("No")),
                                ElevatedButton(
                                    onPressed: () {
                                      delete(articles[index]);
                                    },
                                    child: const Text("Yes")),
                              ],
                            );
                          });
                    },
                    onTap: (){

                      Navigator.push(context, MaterialPageRoute(builder: (_)=>NewsDetailsPage(index:articles[index].id)));
                    },
                    child: Container(
                      width: double.infinity,
                      margin: EdgeInsets.all(7),
                      decoration: BoxDecoration(
                        color: Color(0xffF5F7FA),
                        borderRadius: BorderRadius.circular(10),
                      ),
                      clipBehavior: Clip.hardEdge,
                      child: Column(
                        children: [
                          Expanded( flex:3,child: Container(child: Image.network(articles[index].imageUrl,width:double.infinity,height:130,fit: BoxFit.fill,))),
                          Container(
                           padding: EdgeInsets.all(10),

                            child: Column(
                              children: [
                                Text(articles[index].name??"",style: TextStyle(color: Colors.black,fontWeight: FontWeight.w600),),
                              ],
                            ),
                          )
                        ],
                      ),
                    ),
                  );
                },
              ),
            ),
          ),
        ],
      ),
    );
  }

  void delete(Apteka dorilar) async {
    String url = "https://pharmacy-app-management.herokuapp.com/api/drugs/${a}";

    Map<String, String> headers = {
      'Content-Type': 'application/json; charset=UTF-8'
    };
    var response = await http.delete(Uri.parse(url),body: jsonEncode(dorilar.toJson()), headers: headers);

    if (response.statusCode == 200) {
      Navigator.pushReplacement(context, MaterialPageRoute(builder: (_)=>ThirdPage()));
      //Navigator.pop(context);
    } else {
      showDialog(
          context: context,
          builder: (context) {
            return AlertDialog(
              title: Text('Info'),
              content: Text(response.body.toString()),
            );
          });
    }
  }
}
